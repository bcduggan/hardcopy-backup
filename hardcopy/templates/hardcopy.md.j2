---
title: 'Hardcopy backup of {{ name }}'
subtitle: 'SHA1 checksum: \texttt{ {{ hexdigest }} }'
author: '{{ author }}'
date: '{{ creation_date }}'
documentclass: article
toc: True
abstract: |
    Restoring this data, for the impatient:
    \begin{verbatim}
    hardcopy restore [RESTORED_DATA_FILE]
    \end{verbatim}

    Tested with scanner: $\square$

    Tested with webcam:  $\square$
...

# Restore

You can restore the backed up data from barcode using a webcam with the 'hardcopy' utility that generated this backup. Use:

\begin{verbatim}
hardcopy restore [RESTORED_DATA_FILE]
\end{verbatim}

'hardcopy restore' will use the webcam by default and print sha1sums of each segment as you scan them to stderr. It will also print the sha1sum of the accumulated segment data.

If you cannot obtain 'hardcopy', you can easily restore the data from barcode with 'zbarcam' and 'python.

Using a webcam without 'hardcopy':

\begin{verbatim}
$ alias base32decode='python \
> -m sys -m base64 \
> -c"sys.stdout.write(base64.b32decode(sys.argv[1]))"'

$ for segment in `zbarcam --raw`
> do
> ./base32decode.py $segment >> data
> done
\end{verbatim}

Using scanned barcodes without 'hardcopy':

\begin{verbatim}
$ alias base32decode='python \
> -m sys -m base64 \
> -c"sys.stdout.write(base64.b32decode(sys.argv[1]))"'

$ for segment in `zbarimg --quiet page-*.pnm`
> do
> base32decode $segment >> data
> done
\end{verbatim}

\newpage

# Data

Data checksum: \texttt{ {{ hexdigest }} }

Segment checksums:
{% for i in range(segments|count) %}
Segment {{ i+1 }}: \texttt{ {{ segments[i].hexdigest }} }
{% endfor %}

\begin{verbatim}
{{ data }}
\end{verbatim}

\newpage

{% for i in range(segments|count) %}
# Barcode backup segment {{ i+1 }} of {{ name }}

Segment {{ i+1 }} of {{ segments|count }}

SHA1 checksum:

    {{ segments[i].hexdigest }}

![Segment {{ i+1 }}]({{ segments[i].barcode_filename }} "Segment {{ i+1 }}")

\newpage
{% endfor %}
